exit
Project.where(status: 'Active')
Project.first
Project.active
exit
time_entries_params.fetch(:time_entries).values
time_entries_params.fetch(:time_entries)
time_entries_params
exit
time_entries_params.values
time_entries_params
exit
time_entries_params
exit
exirt
time_entries_params.each {|te| te.fetch(:duration) }
time_entries_params.each {|te| te.fetch('duration') }
time_entries_params.each
time_entries_params
time_entry
time_entry_params
time_entry_params.present?
time_entries_params.present?
time_entries_params
exit
params
time_entries_params
exit
TimeEntry.create(duration: 8)
time_entry_params
TimeEntry.create(time_entry_params)
exit
time_entry.fetch("duration").to_i
time_entry.fetch("duration")
time_entry.fetch(:duration)
time_entry
@time_entry
exit
DateTime.parse(params["time_entry"]["entry_datetime"])
Datetime.parse(params["time_entry"]["entry_datetime"])
Date.parse(params["time_entry"]["entry_datetime"])
params["time_entry"]["entry_datetime"].class
params["time_entry"]["entry_datetime"]
params["time_entry"]
params
exit
current_user.time_entries
@time_entries
hour_time(day, hour)
@time_entries.where(entry_datetime: hour_time(day, hour))
exit
current_user.time_entries.count
current_user.time_entries.each { |t| t.destroy }
current_user.time_entries.count
current_user.time_entries.length
current_user.time_entries
TimeEntry.for(current_user)
TimeEntry.all
exit
params
time_entries_params.present?
exit
params
time_entries_params.present?
exit
params
